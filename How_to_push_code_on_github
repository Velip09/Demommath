#How to push code on Github

### 1. Install Git:

If you haven't installed Git on your machine, you can download and install it from the official website: [Git Downloads](https://git-scm.com/downloads)

### 2. Create a GitHub Repository:

- Log in to your GitHub account.
- Click on the '+' sign in the top right corner of the GitHub page and select "New repository."
- Fill in the necessary information, such as repository name, description, and others, then click on the "Create repository" button.

### 3. Open a Terminal or Command Prompt:

- On Windows, you can use the Command Prompt or PowerShell.
- On macOS or Linux, you can use the Terminal.

### 4. Navigate to Your Project Folder:

Use the `cd` command to navigate to the directory where your project folder is located.

```bash
cd path/to/your/project
```

### 5. Initialize a Git Repository (if not already done):

If your project is not already a Git repository, you'll need to initialize one.

```bash
git init
```

### 6. Add the Files/Folders to the Staging Area:

Use the following command to stage your files for the commit.

```bash
git add *                           
```

### 7. Commit the Changes:

Commit the staged changes with a meaningful message.

```bash
git commit -m "Initial commit"
```

### 8. Link to the GitHub Repository:

Link your local repository to the GitHub repository you created.

```bash
git remote add origin https://github.com/your-username/your-repository.git
```

Make sure to replace `your-username` with your GitHub username and `your-repository` with the name of your repository.

### 9. Push the Changes:

Push your changes to GitHub.

```bash
git push -u origin main
```

If you're working with a different branch, replace `main` with the branch name.

### 10. Enter GitHub Credentials:

You might be prompted to enter your GitHub username and password. Here you should need to use ersonal access token. So First you need to create a personal access token.

#For Example 
username: __token__
password: "token generate comes here

### 11. Check GitHub Repository:

Visit your GitHub repository in a web browser to confirm that your folder and files have been successfully pushed.

That's it! Your folder is now pushed to your GitHub repository. Remember to update the repository URL and branch name according to your specific case.
